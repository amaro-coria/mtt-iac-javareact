name: Infrastructure Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - production
        - staging
      destroy:
        description: 'Destroy infrastructure?'
        required: true
        default: false
        type: boolean

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    defaults:
      run:
        working-directory: ./terraform
    
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=widgets-terraform-state-amarocoria" \
            -backend-config="region=us-west-2" \
            -backend-config="dynamodb_table=widgets-terraform-locks"
        env:
          TF_WORKSPACE: ${{ github.event.inputs.environment }}

#      - name: Terraform Format
#        run: terraform fmt
#
#      - name: Commit Terraform Format Changes
#        run: |
#          git config --local user.email "action@github.com"
#          git config --local user.name "GitHub Action"
#          git add .
#          git diff-index --quiet HEAD || git commit -m "Auto-format Terraform files"
#          git push

      - name: Terraform Plan
#        if: github.event.inputs.destroy == false
        run: terraform plan -out=tfplan
        env:
          TF_VAR_environment: ${{ github.event.inputs.environment }}
          TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

      - name: Terraform Apply
#        if: github.event.inputs.destroy == false
        run: terraform apply tfplan

      - name: Terraform Destroy Plan
        if: github.event.inputs.destroy == true
        run: terraform plan -destroy -out=tfplan
        env:
          TF_VAR_environment: ${{ github.event.inputs.environment }}
          TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

      - name: Terraform Destroy
        if: github.event.inputs.destroy == true
        run: terraform apply tfplan

      - name: Setup kubectl
#        if: github.event.inputs.destroy == false
        uses: azure/setup-kubectl@v3

      - name: Update kubeconfig
#        if: github.event.inputs.destroy == false
        run: |
          aws eks update-kubeconfig --region us-west-2 --name widgets-cluster-${{ github.event.inputs.environment }}

      - name: Install Helm
#        if: github.event.inputs.destroy == false
        uses: azure/setup-helm@v3

      - name: Install NGINX Ingress Controller
#        if: github.event.inputs.destroy == false
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm upgrade --install nginx-ingress ingress-nginx/ingress-nginx \
            --namespace ingress-nginx --create-namespace

      - name: Apply Kubernetes Manifests
#        if: github.event.inputs.destroy == false
        working-directory: ./kubernetes
        run: |
          kubectl apply -f namespace.yaml
          kubectl apply -f .